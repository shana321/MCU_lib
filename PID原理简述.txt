以同学们现在正在做的11年国赛为例：
这里讲解控制输出电压8V的方法

1.首先是容易想到的方法，那就是：
改变输出电压，是通过改变PWM占空比实现的，也就是改变定时器CCR的值
最容易想出，也是最简单直接方法，也是大部分同学用的方法，当然就是用if判断，如下：
if(Vout<8000) //输出电压小于8V
{
	ccr++;
	TIMn->CCRx=ccr;
}
else if(Vout>8000)
{
	ccr--;
	TIMn->CCRx=ccr;
}
从程序上看，只要输出电压偏小，就增大占空比；输出电压偏大，就减小占空比，理论可行。
但是实际上采集电压肯定不是一个不变的量，会有一定的抖动，程序难免会在采样值8000上下波动
这样 ccr实际在不停的+1或-1，导致输出可能会波动较大，更有甚者稳定不下来，达不到要求。

2.这时，有些聪明的同学就会加以改进，比如电压小于4V的时候，每次加就多加一点，而不是只加1，
这样控制的就更加快速，而靠近8V，增减量就少一点，这样就更容易稳定。就像这样：
if(Vout<4000)//输出电压小于4V
{
	ccr+=10;
	TIMn->CCRx=ccr;
}
else if(Vount<6000)	//输出电压小于6V
{
	ccr+=5;
	TIMn->CCRx=ccr;
}
else if(Vout<8000) //输出电压小于8V
{
	ccr++;
	TIMn->CCRx=ccr;
}
else if(Vout>8000)
{
	ccr--;
	TIMn->CCRx=ccr;
}
这样就比第一种方法更好，而且对Vout和8000进行比较的时候适当增大点范围 比如7900和8100之间
都视为8000，可以增强一些稳定性，但是稳态误差就大了，一般多调几次。（当年我只会这种方法）

3.接下来，就可以引入PID的概念了：
实际上：上面两个控制，就是PID的P部分，为什么要加ID部分？其实就是为了解决上面那些问题。
这个从数学上，是能够证明的。一般，P部分加I部分，就可以控制好绝大多数系统了，调PID，主要
就是调节那一个数学公式的系数，用实验的方法试出最优系数，那PID就做好了，其实就是这么简单。
具体请见PID_Demo，pid.c和pid.h里面注释的很详细了，只要同学们利用这次11年国赛的板子学习PID，
PID的使用不在话下的。这次一般只需要用到P、I，D（微分）部分只有在控制温度等有较大延时的系统
时才会用到。